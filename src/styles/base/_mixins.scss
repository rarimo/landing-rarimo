@mixin clearfix() {
  &:after {
    display: block;
    clear: both;
    content: '';
  }
}

@mixin aspect-ratio($ratio) {
  @include clearfix;

  position: relative;
  display: block;

  &:before {
    width: to-rem(1);
    height: 0;
    margin-left: to-rem(-1);
    content: '';
    float: left;
    padding-block-start: calc(100% / #{$ratio});
  }
}

@mixin bg-rect($rect-color: var(--bg-rect-border-color)) {
  background-image: linear-gradient(
      to right,
      #{$rect-color} #{to-rem(1)},
      transparent #{to-rem(1)}
    ),
    linear-gradient(
      to bottom,
      #{$rect-color} #{to-rem(1)},
      transparent #{to-rem(1)}
    );
  background-size: var(--primary-bg-rect-size) var(--primary-bg-rect-size);
  background-repeat: repeat;
}

@mixin block-with-bg-border($bg-color: var(--primary-bg-color)) {
  background-color: #{$bg-color};

  border-top: to-rem(1) solid var(--bg-rect-border-color);
  border-right: none;
  border-bottom: none;
  border-left: to-rem(1) solid var(--bg-rect-border-color);
}

@mixin noise-bg() {
  &,
  > * {
    position: relative;
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-image: url('/img/bg/noise.png');
    filter: invert(0.4) opacity(0.3);

    // @if $args > 11px {
    //   filter: invert(0.4) opacity(0.3);
    // } @else {
    //   filter: invert(0.2) opacity(0.6);
    // }
  }
}

@mixin redefine-aos-prop($animation) {
  html:not(.no-js) & {
    &[data-aos='#{$animation}'] {
      @content;
    }
  }
}
